openapi: 3.0.3
info:
  title: Django DRF Test Task
  version: 1.0.0
  description: Your project description
paths:
  /api/login/:
    post:
      operationId: api_login_create
      summary: Login user
      tags:
      - Login and Logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserLogin'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '500':
          description: Описание 500 ответа
  /api/logout/:
    post:
      operationId: api_logout_create
      summary: Logout
      tags:
      - Login and Logout
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '500':
          description: Описание 500 ответа
  /api/me/:
    get:
      operationId: api_me_retrieve
      description: |-
        This endpoint can only be used
        if the user is authenticated
      summary: User Info
      tags:
      - User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '500':
          description: Описание 500 ответа
    put:
      operationId: api_me_update
      description: |-
        This endpoint can only be used
        if the user is authenticated
      summary: Update User Info
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserPut'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserPut'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '500':
          description: Описание 500 ответа
    delete:
      operationId: api_me_destroy
      description: |-
        This endpoint can only be used
        if the user is authenticated
      summary: Delete User
      tags:
      - User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '500':
          description: Описание 500 ответа
  /api/register/:
    post:
      operationId: api_register_create
      summary: Register new user
      tags:
      - Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
        '500':
          description: Описание 500 ответа
  /api/verify/:
    post:
      operationId: api_verify_create
      summary: Login user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyAccount'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
components:
  schemas:
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
          writeOnly: true
        is_verified:
          type: boolean
          readOnly: true
      required:
      - email
      - first_name
      - id
      - is_verified
      - last_name
      - password
    CustomUserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          maxLength: 255
      required:
      - email
      - password
    CustomUserPut:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
      required:
      - first_name
      - last_name
    VerifyAccount:
      type: object
      properties:
        email:
          type: string
          format: email
        otp:
          type: string
      required:
      - email
      - otp
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
